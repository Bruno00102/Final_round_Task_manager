{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-management-app-frontend-II - Copy - Copy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Task from \"./pages/Task\";\nimport { Toaster } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 19\n  }, this)\n}, {\n  path: \"login\",\n  element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"Register\",\n  element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"Task\",\n  element: /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 14\n  }, this)\n}]);\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dark-mode-toggle\",\n      onClick: toggleDarkMode,\n      children: darkMode ? \"Light Mode\" : \"Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D2+2tCNohYwQ9K/tGnxPgGRQSlM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","createBrowserRouter","RouterProvider","Home","ErrorPage","Login","Register","Task","Toaster","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","App","_s","darkMode","setDarkMode","toggleDarkMode","className","children","onClick","_c","$RefreshReg$"],"sources":["D:/task-management-app-frontend-II - Copy - Copy/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport ErrorPage from \"./pages/ErrorPage\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Task from \"./pages/Task\";\r\nimport { Toaster } from \"react-hot-toast\";\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <Home />,\r\n    errorElement: <ErrorPage />,\r\n  },\r\n  {\r\n    path: \"login\",\r\n    element: <Login />,\r\n  },\r\n  {\r\n    path: \"Register\",\r\n    element: <Register />,\r\n  },\r\n  {\r\n    path: \"Task\",\r\n    element: <Task />,\r\n  },\r\n]);\r\n\r\nfunction App() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${darkMode ? 'dark-mode' : ''}`}>\r\n      <Toaster />\r\n      <Header />\r\n      <RouterProvider router={router} />\r\n      <button className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\r\n        {darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AAExC,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;EACEW,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACP,IAAI;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACjBC,YAAY,eAAER,OAAA,CAACN,SAAS;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAC5B,CAAC,EACD;EACEL,IAAI,EAAE,OAAO;EACbC,OAAO,eAAEH,OAAA,CAACL,KAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACnB,CAAC,EACD;EACEL,IAAI,EAAE,UAAU;EAChBC,OAAO,eAAEH,OAAA,CAACJ,QAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACtB,CAAC,EACD;EACEL,IAAI,EAAE,MAAM;EACZC,OAAO,eAAEH,OAAA,CAACH,IAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAClB,CAAC,CACF,CAAC;AAEF,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMwB,cAAc,GAAGA,CAAA,KAAM;IAC3BD,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEX,OAAA;IAAKc,SAAS,EAAG,OAAMH,QAAQ,GAAG,WAAW,GAAG,EAAG,EAAE;IAAAI,QAAA,gBACnDf,OAAA,CAACF,OAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXP,OAAA,CAACV,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVP,OAAA,CAACR,cAAc;MAACS,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCP,OAAA;MAAQc,SAAS,EAAC,kBAAkB;MAACE,OAAO,EAAEH,cAAe;MAAAE,QAAA,EAC1DJ,QAAQ,GAAG,YAAY,GAAG;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACG,EAAA,CAjBQD,GAAG;AAAAQ,EAAA,GAAHR,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}